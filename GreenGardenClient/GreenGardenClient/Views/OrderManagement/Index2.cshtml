@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@using GreenGardenClient.Models

}
@{
    if (ViewBag.Notification != null)
    {
        <div id="notification" class="alert alert-warning" role="alert">
            @ViewBag.Notification
        </div>
    }
}
<style>
    #notification {
        position: fixed;
        top: 20px; /* Khoảng cách từ đầu trang */
        right: 20px; /* Khoảng cách từ bên phải */
        z-index: 1050; /* Đảm bảo thông báo nằm trên các phần tử khác */
        opacity: 1; /* Bắt đầu với độ mờ là 1 */
        transition: opacity 1s ease-out, transform 1s ease-out; /* Hiệu ứng chuyển đổi cho độ mờ và biến đổi */
        transform: translateY(-10px); /* Đưa thông báo lên một chút */
        width: auto; /* Hoặc thay đổi thành một giá trị cụ thể, ví dụ: 300px */
        max-width: 300px; /* Giới hạn chiều rộng tối đa */
        padding: 15px; /* Khoảng cách bên trong cho thông báo */
    }
</style>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        if ($("#notification").length) {
            setTimeout(function () {
                $("#notification").css("opacity", "0"); // Đặt độ mờ thành 0
                $("#notification").css("transform", "translateY(10px)"); // Đưa thông báo xuống một chút khi ẩn
            }, 3000); // Sau 3 giây
        }
    });
</script>

<!DOCTYPE html>
<html lang="en">

<head>
    <title>Danh sách nhân viên | Quản trị Admin</title>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- Main CSS-->
    <link rel="stylesheet" type="text/css" href="~/css/main.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/boxicons@latest/css/boxicons.min.css">
    <!-- or -->
    <link rel="stylesheet" href="https://unpkg.com/boxicons@latest/css/boxicons.min.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">

    <!-- Font-icon css-->
    <link rel="stylesheet" type="text/css"
          href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js"></script>
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.2/css/all.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.css">




</head>
<header class="app-header">
    <!-- Sidebar toggle button--><a class="app-sidebar__toggle" href="#" data-toggle="sidebar"
                                    aria-label="Hide Sidebar"></a>
    <!-- Navbar Right Menu-->
    <ul class="app-nav">


        <!-- User Menu-->
        <li>
            <a class="app-nav__item" href="/index.html"><i class='bx bx-log-out bx-rotate-180'></i> </a>

        </li>
    </ul>
</header>
<style>

    .search-container {
        display: flex;
        align-items: center;
        justify-content: flex-start;
    }

        .search-container label {
            margin-right: 10px; /* Khoảng cách giữa nhãn và ô input */
            font-weight: bold; /* Làm đậm nhãn để giống trong hình */
        }

        .search-container input {
            background-color: #f5f5f5; /* Màu nền cho ô input */
            border: 1px solid #ddd; /* Viền nhạt cho ô input */
            padding: 5px;
            border-radius: 5px; /* Bo góc cho ô input */
            width: 200px; /* Độ rộng cho ô input */
        }

    .pagination {
        display: flex;
        align-items: center;
        justify-content: flex-end; /* Căn chỉnh các phần tử về phía bên phải */
    }

    .container-pagination-cart {
        display: flex;
        justify-content: space-between; /* Đưa nút giỏ hàng sang trái và phân trang sang phải */
        align-items: center; /* Căn giữa theo chiều dọc */
        margin-bottom: 20px; /* Khoảng cách dưới nếu cần */
    }

    .pagination {
        list-style: none; /* Bỏ các dấu bullet */
        padding: 0;
        margin: 0;
        display: flex; /* Hiển thị các mục theo hàng ngang */
    }

        .pagination li {
            margin-left: 5px; /* Khoảng cách giữa các nút */
        }

    .page-link {
        text-decoration: none;
        padding: 5px 10px;
        border: 1px solid #ccc;
        border-radius: 3px;
        color: #007bff;
    }

    .btn-primary {
        display: flex;
        align-items: center;
        font-size: 16px;
        padding: 5px 10px;
    }


    /* Đặt nền màu #eee cho cả header và sidebar */
    .app-header, .app-sidebar {
        background-color: #eee;
    }

    .app-header {
        position: fixed;
        left: 0;
        right: 0;
        top: 0;
        width: 100%;
        display: flex;
        align-items: center;
        padding: 15px;
        z-index: 1;
        border-bottom: 1px solid #ccc; /* Viền phía dưới header */
    }

        .app-header .app-nav {
            margin-left: auto;
        }

    .app-nav__item {
        text-decoration: none;
        color: #333;
        padding: 8px 15px;
        display: flex;
        align-items: center;
    }

    .app-sidebar {
        position: fixed;
        top: 60px; /* Để không đè lên header */
        left: 0;
        width: 250px;
        height: 100%;
        padding-top: 20px;
        background-color: #eee;
        border-right: 1px solid #ccc; /* Viền phải của sidebar */
    }

    .app-sidebar__user {
        display: flex;
        align-items: center;
        padding: 10px 15px;
    }

    .app-sidebar__user-avatar {
        border-radius: 50%;
        margin-right: 10px;
    }

    .app-sidebar__user-name {
        margin: 0;
        font-weight: bold;
        color: black;
    }

    .app-sidebar__user-designation {
        margin: 0;
        color: black;
    }

    .app-menu {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .app-menu__item {
        text-decoration: none;
        color: #333;
        display: flex;
        align-items: center;
        padding: 10px 20px;
        transition: background-color 0.3s ease;
    }

        .app-menu__item:hover {
            background-color: #ddd;
        }

    .app-menu__icon {
        margin-right: 10px;
        color: #333;
    }

    .app-menu__item.active {
        background-color: #ccc;
        font-weight: bold;
    }

    hr {
        border: 1px solid #ccc;
        margin: 10px 0;
    }
    /* Ẩn submenu mặc định */
    .submenu {
        display: none;
        list-style-type: none;
        padding-left: 20px;
    }

    /* Hiển thị submenu khi có class 'open' */
    .has-submenu.open .submenu {
        display: block;
    }
    /* chỉnh icon cho app menu' */
    .app-menu__item {
        text-decoration: none;
        color: #333;
        padding: 10px 20px;
        display: block;
        transition: background-color 0.3s ease;
    }

        .app-menu__item:hover {
            background-color: #ddd;
        }

    .submenu .app-menu__item {
        padding-left: 40px; /* Đẩy các mục con thụt vào */
    }

    .app-menu__item {
        display: flex;
        align-items: center;
        text-decoration: none;
        color: #333;
        padding: 10px 20px;
        transition: background-color 0.3s ease;
    }

        .app-menu__item i {
            margin-right: 10px; /* Khoảng cách giữa icon và chữ */
            font-size: 18px; /* Kích thước icon */
        }

        .app-menu__item:hover {
            background-color: #ddd;
        }

    .tile {
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        padding: 20px;
        margin-bottom: 30px;
        height:80vh;
    }

    .product-image {
        text-align: center; /* Căn giữa hình ảnh */
        margin-bottom: 20px;
    }

        .product-image img {
            max-width: 80%; /* Giới hạn chiều rộng của ảnh (80% của khung chứa) */
            height: auto;
            border-radius: 10px;
            transition: transform 0.2s ease-in-out;
        }

            .product-image img:hover {
                transform: scale(1.05); /* Hiệu ứng phóng to khi hover */
            }

    .product-title {
        font-size: 28px;
        font-weight: bold;
        color: #333;
    }

    .product-price {
        font-size: 22px;
        color: #e74c3c;
        margin-top: 10px;
    }

    .quantity-control button {
        font-size: 18px;
    }

    .quantity-input {
        text-align: center;
    }

    .container-pagination-cart {
        display: flex;
        justify-content: flex-end;
    }

   

    .product-description {
        font-size: 16px;
        color: #555;
        line-height: 1.5;
    }

    .d-flex .btn {
        font-size: 16px;
        padding: 10px 20px;
    }
    /* Icon phóng to */
.zoom-icon {
    color: #333;
    background: rgba(255, 255, 255, 0.7);
    border-radius: 50%;
    padding: 5px;
    position: absolute;
    top: 10px;
    right: 10px;
    font-size: 24px;
    cursor: pointer;
}

/* CSS cho modal */
.modal {
    display: none; /* Ẩn modal ban đầu */
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0,0,0,0.8);
}

.modal-content {
    margin: auto;
    display: block;
    width: 80%;
    max-width: 700px;
}

.modal-content, .close {
    animation: zoomAnimation 0.6s;
}



/* Đóng modal */
.close {
    position: absolute;
    top: 20px;
    right: 35px;
    color: #fff;
    font-size: 40px;
    font-weight: bold;
    cursor: pointer;
}

.close:hover, .close:focus {
    color: #f00;
    text-decoration: none;
    cursor: pointer;
}


</style>
<body onload="time()" class="app sidebar-mini rtl">
    <header class="app-header">
        <a class="app-sidebar__toggle" href="#" data-toggle="sidebar" aria-label="Hide Sidebar"></a>
        <ul class="app-nav">
            <!-- User Menu-->
            <li>
                <a class="app-nav__item" href="/index.html">
                    <i class='bx bx-log-out bx-rotate-180'></i>
                </a>
            </li>
        </ul>
    </header>

    <!-- Sidebar menu-->
    <div class="app-sidebar__overlay" data-toggle="sidebar"></div>
    <aside class="app-sidebar">
        <div class="app-sidebar__user">
            <img class="app-sidebar__user-avatar" src="~/images/img_1.jpg" width="50px" alt="User Image">
            <div>
                <p class="app-sidebar__user-name"><b>Võ Trường</b></p>
                <p class="app-sidebar__user-designation">Chào mừng bạn trở lại</p>
            </div>
        </div>
        <hr>
        <ul class="app-menu">
            <li class="has-submenu">
                <a class="app-menu__item" href="javascript:void(0)" id="manageOrders">
                    <i class='app-menu__icon bx bx-id-card'></i>
                    <span class="app-menu__label">Quản lý Đơn hàng</span>
                </a>
                <!-- Mục con -->
                <ul class="submenu">
                    <li>
                        <a href="#" class="app-menu__item">
                            <i class='bx bx-notepad'></i> <!-- Icon cho "Đơn chưa sử dụng" -->
                            Đơn chưa sử dụng
                        </a>
                    </li>
                    <li>
                        <a href="#" class="app-menu__item">
                            <i class='bx bx-check-circle'></i> <!-- Icon cho "Đơn đã sử dụng" -->
                            Đơn đã sử dụng
                        </a>
                    </li>
                    <li>
                        <a href="#" class="app-menu__item">
                            <i class='bx bx-time-five'></i> <!-- Icon cho "Đơn đang sử dụng" -->
                            Đơn đang sử dụng
                        </a>
                    </li>
                </ul>

            </li>
            <li>
                <a class="app-menu__item" href="#">
                    <i class='app-menu__icon bx bx-user-voice'></i>
                    <span class="app-menu__label">Quản lý khách hàng</span>
                </a>
            </li>
            <li>
                <a class="app-menu__item" href="table-data-product.html">
                    <i class='app-menu__icon bx bx-purchase-tag-alt'></i>
                    <span class="app-menu__label">Quản lý nhân viên</span>
                </a>
            </li>
            <li>
                <a class="app-menu__item" href="table-data-oder.html">
                    <i class='app-menu__icon bx bx-task'></i>
                    <span class="app-menu__label">Quản lý sản phẩm</span>
                </a>
            </li>
        </ul>
    </aside>

    <main class="app-content" >
        <div class="app-title">
            <ul class="app-breadcrumb breadcrumb side">
                <li class="breadcrumb-item active"><a href="#"><b>Danh sách các đơn đặt</b></a><a href="#"><b>/Tạo đơn</b></a><a href="#"><b>/Đặt vé</b></a></li>
            </ul>
            <div id="clock"></div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="tile" >
                    <div class="tile-body row" >

                        <div class="col-md-6">
                            <div class="product-image position-relative">
                                <!-- Icon phóng to -->
                                <i class="zoom-icon fa fa-search-plus" onclick="openModal()" style="position: absolute; top: 10px; right: 10px; font-size: 24px; cursor: pointer;"></i>

                                <!-- Hình ảnh -->
                                <img src="~/images/doan1.jpg" alt="Lẩu cá mú nấu ngọt" class="img-fluid img-thumbnail" id="productImage">
                            </div>

                            <!-- Modal để phóng to hình ảnh -->
                            <div id="imageModal" class="modal" onclick="closeModal()">
                                <span class="close">&times;</span>
                                <img class="modal-content" id="zoomedImage">
                            </div>

                        </div>

                        <div class="col-md-6">
                            <h2 class="product-title">Lẩu cá mú nấu ngọt</h2>
                            <h4 class="product-price">250,000 ₫</h4>
                            <p class="text-success">Còn hàng</p>
                            <div class="d-flex align-items-center quantity-control">
                                <button class="btn btn-outline-secondary" onclick="decreaseQuantity()">-</button>
                                <input type="number" id="quantity" value="1" min="1" class="form-control mx-2 quantity-input" style="width: 60px;">
                                <button class="btn btn-outline-secondary" onclick="increaseQuantity()">+</button>
                            </div>
                            <p class="product-description mt-2">
                                Vị chua ngọt từ nước lẩu, vị thơm từ dứa, khế, cà chua, vị ngọt dai từ cá biển... sẽ giúp cho bạn có được một món ăn thơm ngon đặc trưng.
                            </p>
                            <div class="d-flex mt-3">
                                <button class="btn btn-primary me-2" onclick="addToCart()">Thêm vào giỏ hàng</button>
                                <button class="btn btn-secondary" onclick="goBack()" style="margin-left:20px">Quay lại</button>
                            </div>

                        </div>
                    </div>

                
            </div>
        </div>


    
    
    
    
</main>





    <script>

    // Hàm mở modal và hiển thị ảnh phóng to
    function openModal() {
    var modal = document.getElementById("imageModal");
    var img = document.getElementById("productImage");
    var modalImg = document.getElementById("zoomedImage");

    modal.style.display = "block";
    modalImg.src = img.src; // Hiển thị ảnh trong modal
    }

    // Hàm đóng modal khi nhấp vào biểu tượng đóng
    function closeModal() {
    var modal = document.getElementById("imageModal");
    modal.style.display = "none";
    }


    </script>



    <script>

        document.getElementById('manageOrders').addEventListener('click', function () {
            this.parentElement.classList.toggle('open'); // Bật/tắt class 'open' để mở/đóng submenu
        });

    </script>
    <script>
        $(document).ready(function () {
            var itemsPerPage = 3; // Số sản phẩm hiển thị trên mỗi trang
            var currentPage = 1;  // Trang hiện tại
            var totalItems = $('.product-card').length; // Tổng số sản phẩm ban đầu
            var totalPages = Math.ceil(totalItems / itemsPerPage); // Tổng số trang ban đầu

            // Hàm hiển thị sản phẩm cho trang hiện tại
            function showPage(page, items) {
                // Ẩn tất cả sản phẩm
                $('.product-card').hide();

                // Tính toán sản phẩm bắt đầu và kết thúc cho trang hiện tại
                var startItem = (page - 1) * itemsPerPage;
                var endItem = Math.min(startItem + itemsPerPage, items.length); // Đảm bảo không vượt quá số lượng sản phẩm

                // Hiển thị sản phẩm của trang hiện tại
                items.slice(startItem, endItem).show();

                // Cập nhật nút phân trang
                $('#pagination .page-item').removeClass('active');
                $('#pagination .page-item[data-page="' + page + '"]').addClass('active');

                // Kiểm tra trạng thái nút Lùi và Tiếp
                if (page === 1) {
                    $('#prev-page').addClass('disabled');
                } else {
                    $('#prev-page').removeClass('disabled');
                }

                if (page === Math.ceil(items.length / itemsPerPage)) {
                    $('#next-page').addClass('disabled');
                } else {
                    $('#next-page').removeClass('disabled');
                }
            }

            // Hàm cập nhật nút phân trang
            function updatePagination(totalItems) {
                $('#pagination').find('.page-item:not(#prev-page, #next-page)').remove(); // Xóa các nút trang cũ
                var totalPages = Math.ceil(totalItems / itemsPerPage); // Tính lại tổng số trang

                // Tạo các nút phân trang
                for (var i = 1; i <= totalPages; i++) {
                    $('<li class="paginate_button page-item" data-page="' + i + '"><a href="#" class="page-link">' + i + '</a></li>').insertBefore('#next-page');
                }
            }

            // Xử lý sự kiện tìm kiếm
            $('#searchInput').on('keyup', function () {
                var searchValue = $(this).val().toLowerCase();

                // Lọc sản phẩm dựa trên giá trị tìm kiếm
                var filteredItems = $('.product-card').filter(function () {
                    return $(this).text().toLowerCase().indexOf(searchValue) > -1;
                });

                if (filteredItems.length > 0) {
                    // Nếu có tìm kiếm và kết quả tìm thấy
                    updatePagination(filteredItems.length); // Cập nhật lại phân trang dựa trên số lượng kết quả
                    currentPage = 1; // Đặt lại trang hiện tại về 1
                    showPage(currentPage, filteredItems); // Hiển thị sản phẩm sau khi tìm kiếm
                } else {
                    // Nếu không có kết quả tìm kiếm, ẩn toàn bộ sản phẩm và làm trống phân trang
                    $('.product-card').hide();
                    $('#pagination').find('.page-item:not(#prev-page, #next-page)').remove(); // Xóa các nút trang
                }
            });

            // Xử lý sự kiện khi bấm vào các nút số trang
            $('#pagination').on('click', '.page-item', function (e) {
                e.preventDefault();
                var page = $(this).data('page');
                if (page) {
                    currentPage = page;
                    var items = $('#searchInput').val() ? $('.product-card').filter(function () {
                        return $(this).text().toLowerCase().indexOf($('#searchInput').val().toLowerCase()) > -1;
                    }) : $('.product-card');
                    showPage(currentPage, items);
                }
            });

            // Xử lý sự kiện khi bấm vào nút Lùi
            $('#prev-page').click(function (e) {
                e.preventDefault();
                if (currentPage > 1) {
                    currentPage--;
                    var items = $('#searchInput').val() ? $('.product-card').filter(function () {
                        return $(this).text().toLowerCase().indexOf($('#searchInput').val().toLowerCase()) > -1;
                    }) : $('.product-card');
                    showPage(currentPage, items);
                }
            });

            // Xử lý sự kiện khi bấm vào nút Tiếp
            $('#next-page').click(function (e) {
                e.preventDefault();
                var items = $('#searchInput').val() ? $('.product-card').filter(function () {
                    return $(this).text().toLowerCase().indexOf($('#searchInput').val().toLowerCase()) > -1;
                }) : $('.product-card');
                var totalItems = items.length;
                var totalPages = Math.ceil(totalItems / itemsPerPage);
                if (currentPage < totalPages) {
                    currentPage++;
                    showPage(currentPage, items);
                }
            });

            // Hiển thị trang đầu tiên khi tải trang
            updatePagination(totalItems); // Khởi tạo nút phân trang ban đầu
            showPage(currentPage, $('.product-card')); // Hiển thị sản phẩm ban đầu
        });


    </script>
    <script>
        // Hàm giảm số lượng sản phẩm
        function decreaseQuantity() {
            let quantityInput = document.getElementById('quantity');
            let currentValue = parseInt(quantityInput.value);

            if (currentValue > 1) {
                quantityInput.value = currentValue - 1;
            }
        }

        // Hàm tăng số lượng sản phẩm
        function increaseQuantity() {
            let quantityInput = document.getElementById('quantity');
            let currentValue = parseInt(quantityInput.value);

            quantityInput.value = currentValue + 1;
        }




    </script>
    @*<script>
    $(document).ready(function () {
    var itemsPerPage = 3; // Số sản phẩm hiển thị trên mỗi trang
    var currentPage = 1;  // Trang hiện tại
    var totalItems = $('.product-card').length; // Tổng số sản phẩm
    var totalPages = Math.ceil(totalItems / itemsPerPage); // Tổng số trang

    // Hàm hiển thị sản phẩm cho trang hiện tại
    function showPage(page) {
    // Ẩn tất cả sản phẩm
    $('.product-card').hide();

    // Hiển thị sản phẩm của trang hiện tại
    var startItem = (page - 1) * itemsPerPage;
    var endItem = startItem + itemsPerPage;

    $('.product-card').slice(startItem, endItem).show();

    // Cập nhật nút phân trang
    $('#pagination .page-item').removeClass('active');
    $('#pagination .page-item[data-page="' + page + '"]').addClass('active');

    // Kiểm tra trạng thái nút Lùi và Tiếp
    if (page == 1) {
    $('#prev-page').addClass('disabled');
    } else {
    $('#prev-page').removeClass('disabled');
    }

    if (page == totalPages) {
    $('#next-page').addClass('disabled');
    } else {
    $('#next-page').removeClass('disabled');
    }
    }

    // Tạo các nút phân trang
    for (var i = 1; i <= totalPages; i++) {
    $('<li class="paginate_button page-item" data-page="' + i + '"><a href="#" class="page-link">' + i + '</a></li>').insertBefore('#next-page');
    }

    // Xử lý sự kiện khi bấm vào các nút số trang
    $('#pagination').on('click', '.page-item', function (e) {
    e.preventDefault();
    var page = $(this).data('page');
    if (page) {
    currentPage = page;
    showPage(currentPage);
    }
    });

    // Xử lý sự kiện khi bấm vào nút Lùi
    $('#prev-page').click(function (e) {
    e.preventDefault();
    if (currentPage > 1) {
    currentPage--;
    showPage(currentPage);
    }
    });

    // Xử lý sự kiện khi bấm vào nút Tiếp
    $('#next-page').click(function (e) {
    e.preventDefault();
    if (currentPage < totalPages) {
    currentPage++;
    showPage(currentPage);
    }
    });

    // Hiển thị trang đầu tiên
    showPage(currentPage);
    });


    </script>


    <script>
    // Khi trang được tải, gán sự kiện cho trường tìm kiếm
    $(document).ready(function () {
    // Lắng nghe sự kiện khi người dùng nhập vào ô tìm kiếm
    $('#searchInput').on('keyup', function () {
    // Lấy giá trị từ ô tìm kiếm và chuyển thành chữ thường để không phân biệt chữ hoa/chữ thường
    var searchValue = $(this).val().toLowerCase();

    // Lặp qua tất cả các dòng sản phẩm trong bảng
    $('.product-card').filter(function () {
    // Lấy văn bản của sản phẩm, mô tả, và giá, rồi kiểm tra xem nó có khớp với giá trị tìm kiếm không
    $(this).toggle($(this).text().toLowerCase().indexOf(searchValue) > -1);
    });
    });
    });



    </script>*@
    <!-- Essential javascripts for application to work-->
    <script src="~/js/jquery-3.2.1.min.js"></script>
    <script src="~/js/popper.min.js"></script>
    <script src="~/js/bootstrap.min.js"></script>
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
    <script src="~/src/jquery.table2excel.js"></script>
    <script src="~/js/main.js"></script>
    <!-- The javascript plugin to display page loading on top-->
    <script src="js/plugins/pace.min.js"></script>
    <!-- Page specific javascripts-->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.js"></script>
    <!-- Data table plugin-->
    <script type="text/javascript" src="~/js/plugins/jquery.dataTables.min.js"></script>
    <script type="text/javascript" src="~/js/plugins/dataTables.bootstrap.min.js"></script>
    <script type="text/javascript">$('#sampleTable').DataTable();</script>
    <script>

        oTable = $('#sampleTable').dataTable();
        $('#all').click(function (e) {
            $('#sampleTable tbody :checkbox').prop('checked', $(this).is(':checked'));
            e.stopImmediatePropagation();
        });


        function time() {
            var today = new Date();
            var weekday = new Array(7);
            weekday[0] = "Chủ Nhật";
            weekday[1] = "Thứ Hai";
            weekday[2] = "Thứ Ba";
            weekday[3] = "Thứ Tư";
            weekday[4] = "Thứ Năm";
            weekday[5] = "Thứ Sáu";
            weekday[6] = "Thứ Bảy";
            var day = weekday[today.getDay()];
            var dd = today.getDate();
            var mm = today.getMonth() + 1;
            var yyyy = today.getFullYear();
            var h = today.getHours();
            var m = today.getMinutes();
            var s = today.getSeconds();
            m = checkTime(m);
            s = checkTime(s);
            nowTime = h + " giờ " + m + " phút " + s + " giây";
            if (dd < 10) {
                dd = '0' + dd
            }
            if (mm < 10) {
                mm = '0' + mm
            }
            today = day + ', ' + dd + '/' + mm + '/' + yyyy;
            tmp = '<span class="date"> ' + today + ' - ' + nowTime +
                '</span>';
            document.getElementById("clock").innerHTML = tmp;
            clocktime = setTimeout("time()", "1000", "Javascript");

            function checkTime(i) {
                if (i < 10) {
                    i = "0" + i;
                }
                return i;
            }
        }
        ;
    </script>
</body>

</html>
