@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
﻿
@using GreenGardenClient.Models;
@{
    var ticket = ViewBag.Ticket as List<TicketVM>;
    var ticketCategories = ViewBag.TicketCategories as List<TicketCategoryVM>;
}
<!doctype html>
<html lang="en">

<head>
    <title>Danh sách vé &mdash; GreenGarden</title>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <link href="https://fonts.googleapis.com/css?family=Work+Sans:400,700,900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">


    <link rel="stylesheet" href="~/fonts/icomoon/style.css">

    <link rel="stylesheet" href="~/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/css/bootstrap-datepicker.css">
    <link rel="stylesheet" href="~/css/jquery.fancybox.min.css">
    <link rel="stylesheet" href="~/css/owl.carousel.min.css">
    <link rel="stylesheet" href="~/css/owl.theme.default.min.css">
    <link rel="stylesheet" href="~/fonts/flaticon/font/flaticon.css">
    <link rel="stylesheet" href="~/css/aos.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

    <!-- MAIN CSS -->
    <link rel="stylesheet" href="~/css/style.css">

</head>

<body data-spy="scroll" data-target=".site-navbar-target" data-offset="300">


    <div class="site-wrap" id="home-section">

        <div class="site-mobile-menu site-navbar-target">
            <div class="site-mobile-menu-header">
                <div class="site-mobile-menu-close mt-3">
                    <span class="icon-close2 js-menu-toggle"></span>
                </div>
            </div>
            <div class="site-mobile-menu-body"></div>
        </div>

     
        <header class="site-navbar site-navbar-target" role="banner">
            <div class="container">
                <div class="row align-items-center position-relative">
                    <div class="col-3 ">
                        <div class="site-logo">
                            <a href="~/Home" class="font-weight-bold">

                                <img src="~/images/logo.jpg" alt="Image" class="img-fluid">
                            </a>
                        </div>
                    </div>
                    <div class="col-9 text-right">
                        <nav class="site-navigation text-right ml-auto d-none d-lg-block" role="navigation">
                            <ul class="site-menu main-menu js-clone-nav ml-auto ">
                                <li><a href="/Home" class="nav-link">Trang chủ</a></li>
                                <li><a href="/Common/Event" class="nav-link">Sự kiện</a></li>
                                <li class="has-dropdown">
                                    <a href="/Service" class="active" class="nav-link">Dịch vụ</a>
                                    <ul class="dropdown">
                                        <li><a href="/Service/ComboList" class="nav-link">Danh sách combo vé</a></li>
                                        <li class="active"><a href="/Service/OrderTicket" class="nav-link">Danh sách vé</a></li>
                                        <li><a href="/Service/OrderFoodAndDrink" class="nav-link">Danh sách đồ ăn</a></li>
                                        <li><a href="/Service/OrderGear" class="nav-link">Danh sách dụng cụ</a></li>
                                    </ul>
                                </li>

                                <li><a href="~/Common/Contact" class="nav-link">Liên hệ</a></li>
                                <li>
                                    @if (HttpContextAccessor.HttpContext.Session.GetString("Email") == null)
                                    {
                                        <a href="/Common/Login" class="nav-link">Đăng nhập</a>
                                        <a href="/Common/Register" class="nav-link">Đăng Ký</a>
                                    }
                                    else
                                    {
                                    <li class="has-dropdown">
                                        <a href="~/Common/UpdateProfile" class="nav-link" style="display: flex; align-items: center;">
                                                @if (@HttpContextAccessor.HttpContext.Session.GetString("Img") == null)
                                                {
                                                <div style="width: 30px; height: 30px; border-radius: 50%; overflow: hidden; margin-right: 8px;">
                                                    <img src="~/images/p22.jpg" alt="Trang cá nhân" style="width: 100%; height: 100%; object-fit: cover;">
                                                </div>
                                                }
                                                else
                                                {
                                                <div style="width: 30px; height: 30px; border-radius: 50%; overflow: hidden; margin-right: 8px;">
                                                    <img src="~/images/Avatar/@HttpContextAccessor.HttpContext.Session.GetString("Img")" alt="Trang cá nhân" style="width: 100%; height: 100%; object-fit: cover;">
                                                </div>
                                                }
                                                @HttpContextAccessor.HttpContext.Session.GetString("Fullname")
                                        </a>


                                        <ul class="dropdown">
                                                @if (HttpContextAccessor.HttpContext.Session.GetInt32("RoleId") == 1)
                                                {
                                                <li><a href="~/DashBoard" class="nav-link">Quản lí</a></li>
                                                <li><a href="~/Home/Logout" class="nav-link">Đăng xuất</a></li>
                                                }
                                                else if (HttpContextAccessor.HttpContext.Session.GetInt32("RoleId") == 2)
                                                {
                                                <li><a href="~/OrderManagement/OrderOnline" class="nav-link">Quản lí</a></li>
                                                <li><a href="~/Home/Logout" class="nav-link">Đăng xuất</a></li>
                                                }
                                                else
                                                {

                                                <li><a href="~/Service/OrderHistory" class="nav-link">Lịch sử đặt hàng</a></li>
                                                <li><a href="~/Service/Cart" class="nav-link">Giỏ hàng</a></li>
                                                <li><a href="~/Home/Logout" class="nav-link">Đăng xuất</a></li>

                                                }
                                        </ul>

                                    </li>
                                    }

                                </li>
                                @if (HttpContextAccessor.HttpContext.Session.GetInt32("RoleId") == 3)
                                {
                                    <li>
                                        <a href="~/Service/Cart" class="nav-link cart-icon">
                                            <span class="cart-wrapper">
                                                <i id="cart-count" class="fas fa-shopping-cart"></i>
                                                @if (HttpContextAccessor.HttpContext.Session.GetInt32("CartItemCount") > 0)
                                                {
                                                    <span class="cart-badge">
                                                        @HttpContextAccessor.HttpContext.Session.GetInt32("CartItemCount")
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="cart-badge">0</span>
                                                }
                                            </span>
                                        </a>
                                    </li>
                                }


                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
            
              
            
            <style>

                .cart-wrapper {
                    position: relative;
                    display: inline-block;
                }

                    .cart-wrapper .fas.fa-shopping-cart {
                        font-size: 24px; /* Adjust icon size */
                        color: #000; /* Adjust icon color */
                    }

                .cart-badge {
                    position: absolute;
                    top: -5px; /* Adjust vertical position */
                    right: -10px; /* Adjust horizontal position */
                    background-color: yellow; /* Badge background color */
                    color: black; /* Text color */
                    font-size: 14px; /* Badge font size */
                    font-weight: bold;
                    line-height: 1; /* Adjust text alignment */
                    border-radius: 50%;
                    padding: 4px 8px; /* Padding for badge shape */
                    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2); /* Add subtle shadow */
                    z-index: 10;
                    white-space: nowrap; /* Prevent text wrapping */
                }


                .site-navbar {
                    position: fixed; /* Cố định header */
                    top: 0; /* Đặt header ở đầu trang */
                    left: 0; /* Canh trái */
                    width: 100%; /* Chiếm toàn bộ chiều rộng */
                    z-index: 1000; /* Đảm bảo header nằm trên các phần tử khác */
                    background-color: #f6f5f5 !important;
                    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* Đổ bóng nhẹ cho header */
                    padding: 10px 0; /* Khoảng cách trên và dưới */
                }

                    /* Khoảng trống bên dưới để bù cho chiều cao header */
                    .site-navbar + .content {
                        padding-top: 70px; /* Điều chỉnh theo chiều cao thực tế của header */
                    }

                .site-menu .dropdown {
                    display: none; /* Ẩn menu thả xuống */
                    position: absolute; /* Để menu thả xuống xuất hiện bên dưới mục Services */
                    text-align: center;
                    background: #f0f0f0; /* Màu nền xám nhẹ cho menu thả xuống */
                    padding: 10px; /* Khoảng cách bên trong */
                    z-index: 999; /* Đảm bảo nó nằm trên các phần tử khác */
                }


                    .site-menu .dropdown li {
                        display: block; /* Hiển thị các mục theo chiều dọc */
                        margin: 5px 0; /* Khoảng cách giữa các mục theo chiều dọc */
                    }

                        .site-menu .dropdown li a {
                            padding: 5px 10px; /* Thêm khoảng cách bên trong cho các liên kết */
                            text-decoration: none; /* Bỏ gạch chân cho các liên kết */
                            color: #333; /* Màu chữ cho các liên kết */
                            transition: background-color 0.3s; /* Hiệu ứng chuyển màu nền */
                        }

                            .site-menu .dropdown li a:hover {
                                background-color: #e0e0e0; /* Màu nền khi hover vào các liên kết */
                            }

                .site-menu .has-dropdown:hover .dropdown {
                    display: block; /* Hiện menu thả xuống khi hover vào mục Services */
                }

                .filter-container {
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                    padding: 15px;
                    background-color: #fff;
                    border-radius: 8px;
                    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
                    margin-bottom: 20px;
                    gap: 20px; /* Khoảng cách giữa hai filter */
                }

                .filter-item {
                    display: flex;
                    flex-direction: column;
                    gap: 5px;
                    position: relative;
                    width: 50%; /* Cân chỉnh mỗi filter chiếm 50% không gian */
                }

                    .filter-item input, .filter-item select {
                        padding: 10px;
                        border-radius: 5px;
                        border: 1px solid #ccc;
                        font-size: 14px;
                        width: 100%; /* Đảm bảo độ rộng bằng với chiều rộng của filter-item */
                    }

                    .filter-item label {
                        font-size: 14px;
                        font-weight: bold;
                        color: #333;
                    }

                    /* Biểu tượng lịch cho input date */
                    .filter-item input[type="date"] {
                        padding-right: 40px;
                        background-size: 20px;
                        -webkit-appearance: none;
                        -moz-appearance: none;
                        appearance: none;
                        background-position: right 10px center;
                        background-repeat: no-repeat;
                    }

                    /* Biểu tượng sắp xếp cho select */
                    .filter-item select {
                        background-size: 20px;
                        appearance: none;
                        -webkit-appearance: none;
                        -moz-appearance: none;
                        padding-right: 40px;
                        background-position: right 10px center;
                        background-repeat: no-repeat;
                    }


                .product-list {
                    display: flex;
                    flex-direction: column;
                    gap: 20px;
                }

                .product-item {
                    display: flex;
                    justify-content: space-between; /* Căn hình ảnh và nội dung ra 2 phía */
                    align-items: center; /* Căn giữa theo chiều dọc */
                    background-color: #fff;
                    border-radius: 8px;
                    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
                    padding: 15px;
                    margin-bottom: 20px;
                    width: 100%; /* Đảm bảo nó chiếm toàn bộ chiều rộng */
                }

                .product-image {
                    width: 200px; /* Điều chỉnh độ rộng của hình ảnh */
                    height: auto;
                    flex-shrink: 0; /* Đảm bảo hình ảnh không bị thu nhỏ */
                }

                    .product-image img {
                        width: 200px; /* Đảm bảo hình ảnh chiếm hết chiều rộng của container */
                        height: 267px; /* Đảm bảo chiều cao tự điều chỉnh theo tỉ lệ của ảnh */
                        border-radius: 8px; /* Bo tròn các góc của hình ảnh */
                        object-fit: cover; /* Đảm bảo hình ảnh vừa khít mà không bị méo */
                    }

                .product-content {
                    flex-grow: 1; /* Đảm bảo phần nội dung chiếm hết không gian còn lại */
                    padding-left: 20px; /* Khoảng cách giữa ảnh và nội dung */
                    display: flex;
                    flex-direction: column;
                    justify-content: space-between;
                    height: 100%; /* Đảm bảo chiều cao của nội dung bằng với chiều cao của hình ảnh */
                }

                .details-row {
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                    margin-bottom: 10px;
                }

                .price-quantity {
                    display: flex;
                    align-items: center;
                    gap: 20px; /* Khoảng cách giữa giá và thanh quantity */
                }

                .price {
                    font-size: 24px; /* Tăng kích thước font của giá */
                    color: red;
                    font-weight: bold;
                    line-height: 1; /* Đảm bảo chiều cao của text không vượt quá mức cần thiết */
                }

                .quantity-control {
                    display: flex;
                    align-items: center;
                    justify-content: space-between;
                    overflow: hidden;
                    width: 100px;
                    height: 40px; /* Đảm bảo chiều cao phù hợp */
                    background-color: #fff;
                }

                    .quantity-control button {
                        background-color: transparent;
                        border: none;
                        cursor: pointer;
                        font-size: 18px; /* Kích thước font cho dấu +/- */
                        color: #ff6f61; /* Màu của dấu trừ và cộng */
                    }

                    .quantity-control input {
                        width: 30px; /* Độ rộng cho input */
                        text-align: center;
                        border: none;
                        font-size: 18px; /* Kích thước số hiển thị */
                        outline: none;
                        padding: 5px 0;
                        background-color: transparent;
                        color: #333; /* Màu số */
                    }

                .btn-group {
                    display: flex;
                    gap: 10px;
                    margin-top: 15px;
                }

                .add-to-cart, .buy-now {
                    padding: 10px 20px;
                    border-radius: 5px;
                    font-size: 14px;
                    cursor: pointer;
                }

                .add-to-cart {
                    background-color: #fff;
                    border: 1px solid #ffca28;
                    color: #ffca28;
                    display: flex;
                    align-items: center;
                    gap: 8px;
                }

                .buy-now {
                    background-color: #ff6f61;
                    color: #fff;
                }

                .add-to-cart:hover {
                    background-color: #ffca28;
                    color: #fff;
                }

                .buy-now:hover {
                    background-color: #ff3f31;
                }

                .quantity-date-container {
                    display: flex;
                    justify-content: space-between; /* Sắp xếp các phần tử cách đều nhau */
                    align-items: center; /* Căn giữa theo chiều dọc */
                    gap: 20px; /* Khoảng cách giữa số lượng và ngày */
                    margin-top: 10px; /* Khoảng cách trên */
                }

                    .quantity-date-container p {
                        margin: 0;
                        font-size: 16px;
                        display: flex;
                        align-items: center;
                    }

                .styled-date {
                    padding: 8px 12px;
                    border: none; /* Loại bỏ border */
                    border-bottom: 2px solid transparent; /* Gạch ngang ban đầu trong suốt */
                    font-size: 16px;
                    color: #333;
                    background-color: #f9f9f9;
                    transition: border-bottom-color 0.3s ease; /* Hiệu ứng khi nhấn vào */
                    outline: none; /* Loại bỏ viền focus mặc định */
                    margin-left: -10px; /* Lùi sang trái 1 chút */
                }

                    .styled-date:focus {
                        border-bottom-color: #ff6f61; /* Đổi màu gạch ngang khi nhấn */
                    }

                    .styled-date::-webkit-calendar-picker-indicator {
                        background-color: #ffff;
                        padding: 5px;
                        border-radius: 50%;
                    }

                .pagination {
                    display: flex;
                    list-style: none;
                    justify-content: center;
                    align-items: center;
                    padding: 0;
                }

                    .pagination .page-item {
                        margin: 0 5px;
                    }

                    .pagination .page-link {
                        color: #efba6c;
                        border-radius: 5px;
                        padding: 8px 12px;
                        border: 1px solid #dee2e6;
                        text-decoration: none;
                        background-color: white;
                        transition: background-color 0.3s, color 0.3s;
                    }

                        .pagination .page-link:hover {
                            background-color: #efba6c;
                            ;
                            color: white;
                        }

                    .pagination .page-item.active .page-link {
                        background-color: #efba6c;
                        ;
                        color: white;
                        border-color: #efba6c;
                    }

                    .pagination .page-item.disabled .page-link {
                        color: #6c757d;
                        pointer-events: none;
                        background-color: #e9ecef;
                        border-color: #e9ecef;
                    }


                .swal-confirm-button {
                    background-color: #efba6c !important; /* Yellow background */
                    color: #000 !important; /* Black text */
                    border: none; /* Remove border */
                    font-weight: bold; /* Make text bold */
                    padding: 10px 20px; /* Adjust padding */
                    border-radius: 5px; /* Rounded corners */
                }

                    .swal-confirm-button:hover {
                        background-color: #efba6c !important; /* Slightly darker yellow on hover */
                    }
                    
                
                .swal-cancel-button {
                    background-color: #6c757d !important; /* Default cancel button color (gray) */
                    color: #fff !important;
                    border: none;
                    font-weight: bold;
                    padding: 10px 20px;
                    border-radius: 5px;
                }

                    .swal-cancel-button:hover {
                        background-color: #5a6268 !important; /* Darker gray on hover */
                    }

                .active-category {
                    font-weight: bold;
                    color: #d99b53;
                }
            </style>
            <script>
                $(document).ready(function () {
                    $('.has-dropdown').hover(
                        function () {
                            $(this).find('.dropdown').stop(true, true).slideDown(200);
                        },
                        function () {
                            $(this).find('.dropdown').stop(true, true).slideUp(200);
                        }
                    );
                });


                function increaseQuantity(id) {
                    let quantityInput = document.getElementById(id);
                    let currentValue = parseInt(quantityInput.value);
                    if (!isNaN(currentValue)) {
                        quantityInput.value = currentValue + 1;
                    }
                }

                function decreaseQuantity(id) {
                    let quantityInput = document.getElementById(id);
                    let currentValue = parseInt(quantityInput.value);
                    if (!isNaN(currentValue) && currentValue > 1) {
                        quantityInput.value = currentValue - 1;
                    }
                }

            </script>


        </header>

      


        @* <div class="ftco-blocks-cover-1">
        <div class="site-section-cover overlay" style="background-image: url('@Url.Content("~/images/p22.jpg")')">
        <div class="container">
        <div class="row align-items-center justify-content-center text-center">
        <div class="col-md-5" data-aos="fade-up">
        <h1 class="mb-3 text-white">Đặt vé</h1>
        <p>Dịch vụ đặt vé tại Sông Quê Green Garden Campin mang đến trải nghiệm thuận tiện và nhanh chóng cho du khách. Chỉ với vài thao tác đơn giản qua trang web, bạn có thể dễ dàng chọn loại vé phù hợp với nhu cầu</p>
        </div>
        </div>
        </div>
        </div>
        </div>
        *@

        <div style="margin-top: 50px" class="site-section">
            <div class="container">
                <div class="row justify-content-center text-center">
                    <div class="col-md-7">
                        <div class="heading-39101 mb-5">
                            <span class="backdrop text-center">Đặt vé</span>
                            <span class="subtitle-39191">Đặt vé</span>
                            <h3>Phần đặt vé tại đây</h3>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <!-- Cột bên trái: Danh sách category -->
                    <div class="col-lg-3 col-md-4 mb-4" data-aos="fade-up">
                        <div class="category-list">
                            <h4 class="mb-4">Các loại vé</h4>
                            <ul id="categoryFilter" class="list-group">

                                <li class="list-group-item">
                                    <a class="@(ViewBag.CurrentCategoryId == null ? "active-category" : "")"
                                       href="@Url.Action("OrderTicket", "Service", new { sortBy = ViewBag.SortBy })">Tất cả</a>
                                </li>
                                @foreach (var category in ticketCategories)
                                {
                                    <li class="list-group-item">
                                        <a href="@Url.Action("OrderTicket", new { categoryId = category.TicketCategoryId, sortBy = ViewBag.SortBy  })"
                                           class="@(ViewBag.CurrentCategoryId == category.TicketCategoryId ? "active-category" : "")">@category.TicketCategoryName</a>
                                    </li>
                                }

                            </ul>
                        </div>
                    </div>


                    <!-- Cột bên phải: Danh sách sản phẩm -->
                    <div class="col-lg-9 col-md-8">

                        <div class="filter-container" data-aos="fade-up">
                            <!-- Ngày sử dụng -->
                            <!-- Sắp xếp theo -->
                            <div class="filter-item">
                                <label for="sort">Sắp xếp theo:</label>
                                <select id="sort" name="sort" onchange="sortCampingGears()">
                                    <option value="" @(ViewBag.sortBy == "" ? "selected" : "")>Mặc định</option>
                                    <option value="1" @(ViewBag.sortBy == "1" ? "selected" : "")>Giá tăng dần</option>
                                    <option value="2" @(ViewBag.sortBy == "2" ? "selected" : "")>Giá giảm dần</option>
                                </select>
                            </div>
                        </div>
                        <div class="product-list" data-aos="fade-up">
                            @if (ticket != null && ticket.Any())
                            {
                                foreach (var item in ticket)
                                {
                                    <div class="product-item" id="product-@item.TicketId">
                                        <div class="product-image">
                                            <img src="~/images/Ticket/@item.ImgUrl" alt="Image" class="img-fluid">
                                        </div>
                                        <div class="product-content">
                                            <h2><a href="@Url.Action("TripSingle", new { id = item.TicketId })">Vé @item.TicketName</a></h2>
                                            <p><i class="fa fa-info-circle"></i> Mô tả: Vé giúp bạn trải nghiệm không gian cắm trại và tổ chức tiệc ngoài trời rộng rãi.</p>

                                            <div class="price-quantity">
                                                <p style="margin-bottom:1px" class="price"><i class="fa fa-money-bill-wave"></i> @item.Price.ToString("N0")đ</p>
                                            </div>


                                            <div class="btn-group">
                                                <form method="post" action="/Service/AddToCart">
                                                    <input type="hidden" name="Id" value="@item.TicketId" />
                                                    <input type="hidden" name="Name" value="@item.TicketName" />
                                                    <input type="hidden" name="CategoryName" value="@item.TicketCategoryName" />
                                                    <input type="hidden" name="Type" value="Ticket" />
                                                    <input type="hidden" name="TypeCategory" value="TicketCategory" />
                                                    <input type="hidden" name="price" value="@item.Price" />
                                                    <input type="hidden" name="quantity" value="1" />
                                                    <!-- Input ẩn để lưu ngày sử dụng được chọn -->
                                                    <input type="hidden" id="hidden-date-@item.TicketId" name="usageDate" />
                                                    <input type="hidden" name="redirectAction" value="OrderTicket" />
                                                    <button type="submit" class="add-to-cart" onclick="return setUsageDate('@item.TicketId')">
                                                        <i class="fa fa-cart-shopping"></i> Thêm giỏ hàng
                                                    </button>

                                                </form>
                                                <a href="@Url.Action("TicketDetail", "Service", new { ticketId = item.TicketId })" class="buy-now">Xem chi tiết</a>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                            else
                            {
                                <p>Không có vé nào.</p>
                            }
                        </div>
                    </div>
                </div>



            </div>

            <script>
                function sortCampingGears() {
                    const sortValue = document.getElementById("sort").value;
                    const categoryId = '@ViewBag.CurrentCategoryId'; // Lấy categoryId hiện tại từ ViewBag nếu có
                    const url = `@Url.Action("OrderTicket", "Service")?categoryId=${categoryId}&sortBy=${sortValue}`;
                    window.location.href = url;
                }
                function setUsageDate(ticketId) {
                    const savedDate = sessionStorage.getItem('usageDateForAll');
                    const savedTime = sessionStorage.getItem('usageTimeForAll');

                    if (savedDate && savedTime) {
                        // Use the saved date and time if they exist
                        document.getElementById('hidden-date-' + ticketId).value = `${savedDate} ${savedTime}`;
                        addToCart(ticketId); // Call addToCart function directly
                    } else {
                        // Show the popup to select both date and time if not previously saved
                        Swal.fire({
                            title: 'Chọn ngày và giờ sử dụng',
                            html: (() => {
                                // Get the current date and time
                                const now = new Date();

                                // Format the date as 'yyyy-MM-dd'
                                const currentDate = now.toISOString().split('T')[0];

                                // Format the time as 'HH:mm'
                                const tenMinutesLater = new Date(now.getTime() + 10 * 60000); // Add 10 minutes in milliseconds
                                const hours = tenMinutesLater.getHours().toString().padStart(2, '0'); // Format hours as HH
                                const minutes = tenMinutesLater.getMinutes().toString().padStart(2, '0'); // Format minutes as mm
                                //const currentTime = now.toTimeString().split(':').slice(0, 2).join(':');
                                const futureTime = `${hours}:${minutes}`;

                                return `
                            <input type="date" id="usage-date" class="swal2-input" value="${currentDate}" min="${currentDate}">
                                            <input type="time" id="usage-time" class="swal2-input" value="${futureTime}">
                        `;
                            })(),
                            showCancelButton: true,
                            confirmButtonText: 'Xác nhận',
                            cancelButtonText: 'Hủy',
                            customClass: {
                                confirmButton: 'swal-confirm-button', // Assign custom class
                                cancelButton: 'swal-cancel-button'
                            },
                            preConfirm: () => {
                                const date = document.getElementById('usage-date').value;
                                const time = document.getElementById('usage-time').value;
                                const currentDate = new Date().toISOString().split('T')[0]; // Get current date in 'yyyy-mm-dd' format
                                if (!date || !time) {
                                    Swal.showValidationMessage('Bạn cần nhập cả ngày và giờ sử dụng!');
                                    return false;
                                }
                                if (date < currentDate) {
                                    Swal.showValidationMessage('Ngày sử dụng phải lớn hơn hoặc bằng ngày hiện tại!');
                                    return false;
                                }
                                return { date, time };
                            }
                        }).then((result) => {
                            if (result.isConfirmed) {
                                const { date, time } = result.value;
                                sessionStorage.setItem('usageDateForAll', date);
                                sessionStorage.setItem('usageTimeForAll', time);

                                // Set both date and time in the hidden input for the form
                                document.getElementById('hidden-date-' + ticketId).value = `${date} ${time}`;
                                addToCart(ticketId); // Call addToCart after date and time selection
                            }
                        });
                    }
                    return false;
                }
                function updateCartCount() {
                    $.get('/Service/GetCartItemCount', function (count) {
                        if (count !== null && count > 0) {
                            // Kiểm tra nếu badge chưa tồn tại, thêm badge mới
                            if (!$('.cart-badge').length) {
                                $('.cart-wrapper').append(`<span class="cart-badge">${count}</span>`);
                            } else {
                                // Nếu badge đã tồn tại, cập nhật số lượng
                                $('.cart-badge').text(count);
                            }
                        } else {
                            // Nếu giỏ hàng trống, hiển thị 0
                            if (!$('.cart-badge').length) {
                                $('.cart-wrapper').append(`<span class="cart-badge">0</span>`);
                            } else {
                                $('.cart-badge').text('0');
                            }
                        }
                    });
                }

                function addToCart(ticketId) {
                    const form = $(`#product-${ticketId}`).find('form');
                    const formData = form.serialize();

                    $.ajax({
                        type: "POST",
                        url: form.attr("action"),
                        data: formData,
                        success: function (response) {
                            if (response.success) {
                                // Nếu thêm vào giỏ hàng thành công
                                Swal.fire({
                                    icon: "success",
                                    title: "Thành công",
                                    text: response.message,
                                    showConfirmButton: false,
                                    timer: 1500
                                });
                                updateCartCount();
                            } else {
                                // Nếu có lỗi (chưa đăng nhập hoặc sai vai trò)
                                Swal.fire({
                                    icon: "error",
                                    title: "Thất bại",
                                    text: response.message,
                                    showConfirmButton: false,
                                    timer: 1500
                                });
                            }
                        },
                        error: function () {
                            // Xử lý lỗi khi gọi AJAX thất bại
                            Swal.fire({
                                icon: "error",
                                title: "Thất bại",
                                text: "Đã có lỗi xảy ra, vui lòng thử lại.",
                                showConfirmButton: false,
                                timer: 1500
                            });
                        }
                    });
                }

            </script>
        </div>
        <nav aria-label="Page navigation">
            <ul id="pagination" class="pagination">
                <li class="page-item first-page"><a href="#" class="page-link">«</a></li>
                <li class="page-item prev-page"><a href="#" class="page-link">‹</a></li>
                <!-- Các trang sẽ được tạo động bằng JavaScript -->
                <li class="page-item next-page"><a href="#" class="page-link">›</a></li>
                <li class="page-item last-page"><a href="#" class="page-link">»</a></li>
            </ul>
        </nav>

        </div>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
        $(document).ready(function () {
            var itemsPerPage = 3; // Number of products per page
            var currentPage = 1;  // Current page

            // Initialize AOS (initial load)
            AOS.init();

            // Function to display items for the current page
            function showPage(page) {
                var items = $('.product-item'); // Get all products
                items.hide(); // Hide all items initially

                // Calculate start and end items for the current page
                var startItem = (page - 1) * itemsPerPage;
                var endItem = Math.min(startItem + itemsPerPage, items.length);

                // Show items for the current page
                items.slice(startItem, endItem).show();

                // Reinitialize AOS after showing items
                AOS.refresh();

                // Update pagination buttons
                $('#pagination .page-item').removeClass('active');
                $('#pagination .page-item[data-page="' + page + '"]').addClass('active');

                // Toggle arrow buttons' disabled states
                $('.prev-page').toggleClass('disabled', page === 1);
                $('.next-page').toggleClass('disabled', page === Math.ceil(items.length / itemsPerPage));
                $('.first-page').toggleClass('disabled', page === 1);
                $('.last-page').toggleClass('disabled', page === Math.ceil(items.length / itemsPerPage));
            }

            // Function to create pagination buttons dynamically based on the number of items
            function updatePagination() {
                var items = $('.product-item'); // Get all products
                var totalPages = Math.ceil(items.length / itemsPerPage);

                // Clear old pagination buttons, except for arrow buttons
                $('#pagination').find('.page-item:not(.first-page, .prev-page, .next-page, .last-page)').remove();

                // Create new pagination buttons
                for (var i = 1; i <= totalPages; i++) {
                    $('<li class="paginate_button page-item" data-page="' + i + '"><a href="#" class="page-link">' + i + '</a></li>').insertBefore('.next-page');
                }

                // Attach click events to each pagination button
                $('#pagination .page-item[data-page]').off('click').on('click', function (e) {
                    e.preventDefault();
                    var page = $(this).data('page');
                    if (page) {
                        currentPage = page;
                        showPage(currentPage);
                    }
                });
            }

            // Click event for the "First Page" button
            $('.first-page').off('click').on('click', function (e) {
                e.preventDefault();
                if (!$(this).hasClass('disabled')) {
                    currentPage = 1;
                    showPage(currentPage);
                }
            });

            // Click event for the "Previous Page" button
            $('.prev-page').off('click').on('click', function (e) {
                e.preventDefault();
                if (!$(this).hasClass('disabled') && currentPage > 1) {
                    currentPage--;
                    showPage(currentPage);
                }
            });

            // Click event for the "Next Page" button
            $('.next-page').off('click').on('click', function (e) {
                e.preventDefault();
                var items = $('.product-item'); // Get all products
                var totalPages = Math.ceil(items.length / itemsPerPage);
                if (!$(this).hasClass('disabled') && currentPage < totalPages) {
                    currentPage++;
                    showPage(currentPage);
                }
            });

            // Click event for the "Last Page" button
            $('.last-page').off('click').on('click', function (e) {
                e.preventDefault();
                var items = $('.product-item'); // Get all products
                var totalPages = Math.ceil(items.length / itemsPerPage);
                if (!$(this).hasClass('disabled')) {
                    currentPage = totalPages;
                    showPage(currentPage);
                }
            });

            // Function to initialize pagination on page load
            function initializePagination() {
                updatePagination();
                showPage(1);
            }

            // Update product list when filters are changed (specific for Order Gear)
            function updateGearList() {
                const filters = {
                    categoryId: $('#categoryFilter').val(),
                    sortBy: $('#sort').val()
                };

                $.get('@Url.Action("OrderTicket", "Service")', filters, function (data) {
                    // Update #gearList with the filtered products
                    $('#gearList').html($(data).find('#gearList').html());

                    // Reinitialize pagination after filtering
                    initializePagination(); // Reset pagination based on the new filtered items
                    AOS.refresh(); // Refresh AOS for animations
                });
            }


            // Bind filter change events to update product list and pagination
            $('#categoryFilter, #sort').on('change', function () {
                updateGearList();
            });

            // Initialize pagination and AOS when the page loads
            initializePagination();
            AOS.init();
        });
    </script>
        <script src="https://cdn.jsdelivr.net/npm/aos@2.3.1/dist/aos.js"></script>
        <script>
            AOS.init({
                duration: 1200,
            });
        </script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script src="~/js/jquery-3.3.1.min.js"></script>
        <script src="~/js/jquery-migrate-3.0.0.js"></script>
        <script src="~/js/popper.min.js"></script>
        <script src="~/js/bootstrap.min.js"></script>
        <script src="~/js/owl.carousel.min.js"></script>
        <script src="~/js/jquery.sticky.js"></script>
        <script src="~/js/jquery.waypoints.min.js"></script>
        <script src="~/js/jquery.animateNumber.min.js"></script>
        <script src="~/js/jquery.fancybox.min.js"></script>
        <script src="~/js/jquery.stellar.min.js"></script>
        <script src="~/js/jquery.easing.1.3.js"></script>
        <script src="~/js/bootstrap-datepicker.min.js"></script>
        <script src="~/js/isotope.pkgd.min.js"></script>
        <script src="~/js/aos.js"></script>
        <script src="~/js/main.js"></script>
        

        <style>
            /* CSS để hiển thị placeholder cho input date */
            input[type="date"]::before {
                content: attr(placeholder);
                color: #aaa;
            }

            input[type="date"]:focus::before,
            input[type="date"]:valid::before {
                content: '';
            }
        </style>
</body>
<footer class="site-footer bg-light">
    <div class="container">
        <div class="row gy-3">
            <!-- Facebook Section -->
            <div class="col-lg-3">
                <h2 class="footer-heading mb-3 text-uppercase">Facebook</h2>
                <div class="row g-2">
                    <div class="col-4" style="margin:10px">
                        <a href="#"><img src="~/images/Picture1.jpg" alt="Image" class="img-fluid rounded"></a>
                    </div>
                    <div class="col-4" style="margin:10px">
                        <a href="#"><img src="~/images/Picture8.jpg" alt="Image" class="img-fluid rounded"></a>
                    </div>
                    <div class="col-4" style="margin:10px">
                        <a href="#"><img src="~/images/Picture7.jpg" alt="Image" class="img-fluid rounded"></a>
                    </div>
                    <div class="col-4" style="margin:10px">
                        <a href="#"><img src="~/images/Picture1.jpg" alt="Image" class="img-fluid rounded"></a>
                    </div>
                    <div class="col-4" style="margin:10px">
                        <a href="#"><img src="~/images/Picture8.jpg" alt="Image" class="img-fluid rounded"></a>
                    </div>
                    <div class="col-4" style="margin:10px">
                        <a href="#"><img src="~/images/Picture7.jpg" alt="Image" class="img-fluid rounded"></a>
                    </div>
                </div>
            </div>


            <!-- Quick Links Section -->
            <div class="col-lg-4">
                <h2 class="footer-heading mb-3 text-uppercase">Truy cập nhanh</h2>
                <ul class="list-unstyled">
                    <li class="mb-2"><a href="#" class="text-decoration-none link-colored"><i class="fab fa-facebook me-2"></i>Facebook</a></li>
                    <li class="mb-2"><a href="#" class="text-decoration-none link-colored"><i class="fab fa-instagram me-2"></i>Instagram</a></li>
                    <li class="mb-2"><a href="#" class="text-decoration-none link-colored"><i class="fab fa-tiktok me-2"></i>Tiktok</a></li>
                </ul>
            </div>

            <!-- Google Maps Section -->
            <div class="col-lg-5">
                <h2 class="footer-heading mb-3 text-uppercase">Địa chỉ</h2>
                <div class="map rounded overflow-hidden">
                    <iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3408.2711745514057!2d105.91792687476992!3d21.05656318682401!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3135a9ad89ed0681%3A0xdfe74944a2df349b!2sS%C3%B4ng%20Qu%C3%AA%20Green%20Garden!5e1!3m2!1svi!2s!4v1730041487949!5m2!1svi!2s"
                            width="100%" height="200" frameborder="0" style="border:0;" allowfullscreen=""
                            aria-hidden="false" tabindex="0"></iframe>
                </div>
            </div>
        </div>

        <hr class="bg-secondary my-3">

        <!-- Footer Bottom -->
        <div class="row">
            <div class="col text-center">
                <p class="mb-0 small text-secondary">&copy; 2024 Green Garden. All Rights Reserved. Designed by <a href="#" class="text-dark text-decoration-none">G43_SEP490</a>.</p>
            </div>
        </div>
    </div>
</footer>
<style>
    /* Footer chung */
    .site-footer {
        background: #f8f9fa; /* Màu nền sáng */
        color: #212529; /* Màu chữ */
        padding: 20px 0; /* Giảm chiều cao padding */
    }

    .footer-heading {
        font-size: 1rem; /* Giảm kích thước tiêu đề */
        font-weight: bold;
        color: #212529; /* Màu chữ tiêu đề */
        border-bottom: 2px solid #dee2e6;
        padding-bottom: 8px;
    }

    .site-footer a {
        text-decoration: none;
        transition: color 0.3s ease;
    }

        .site-footer a:hover {
            color: #efba6c; /* Màu hover */
        }

    /* Áp dụng màu #efba6c cho liên kết */
    .link-colored {
        color: #efba6c;
    }

        .link-colored:hover {
            color: #d99a50; /* Màu hover nhẹ hơn */
        }

    /* Hình ảnh Facebook */
    .gal_col img {
        border-radius: 4px; /* Bo góc nhẹ */
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .gal_col img:hover {
            transform: scale(1.05);
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2); /* Bóng khi hover */
        }

    /* Google Maps */
    .map iframe {
        border-radius: 8px;
        border: none;
    }

    /* Giảm khoảng cách giữa các phần */
    .site-footer .row {
        margin-bottom: 10px; /* Giảm khoảng cách */
    }

    hr {
        margin: 15px 0; /* Thu gọn khoảng cách giữa các phần */
    }

</style>
</html>